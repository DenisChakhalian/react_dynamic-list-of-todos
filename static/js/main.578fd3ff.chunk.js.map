{"version":3,"sources":["types/Filter.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api/user.ts","App.tsx","api/todos.ts","index.tsx"],"names":["FilterField","TodoItem","todo","onToggleModal","selectedTodoId","completed","id","title","className","classnames","type","onClick","TodoList","todos","map","TodoFilter","onFilter","filter","filterField","query","value","onChange","event","target","Object","keys","option","placeholder","style","pointerEvents","Loader","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","fetch","then","responce","json","catch","error","console","log","finally","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","All","setFilter","visibleTodos","newTodos","Active","Completed","toLowerCase","includes","getFilteredTodos","handleToggleModal","currentTodos","currentFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.578fd3ff.chunk.js","sourcesContent":["export enum FilterField {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport interface Filter {\n  filterField: FilterField;\n  query: string;\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  onToggleModal: (todo:Todo | null) => void;\n  selectedTodoId: number | undefined;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  onToggleModal,\n  selectedTodoId,\n}) => {\n  const { completed, id, title } = todo;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={\n            classnames({\n              'has-text-danger': !completed,\n              'has-text-success': completed,\n            })\n          }\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onToggleModal(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classnames('far', {\n              'fa-eye': selectedTodoId !== id,\n              'fa-eye-slash': selectedTodoId === id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  onToggleModal: (todo:Todo | null) => void;\n  selectedTodoId: number | undefined;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onToggleModal,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          onToggleModal={onToggleModal}\n          todo={todo}\n          selectedTodoId={selectedTodoId}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter, FilterField } from '../../types/Filter';\n\ntype Props = {\n  onFilter: (filter: Filter) => void;\n  filter: Filter\n};\n\nexport const TodoFilter: React.FC<Props> = ({ onFilter, filter }) => {\n  const { filterField, query } = filter;\n\n  const handleChangeFilterField\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    onFilter({\n      filterField: event.target.value as FilterField,\n      query,\n    });\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onFilter({\n      filterField,\n      query: event.target.value,\n    });\n  };\n\n  const handleDeleteQuery = () => {\n    onFilter({\n      filterField,\n      query: '',\n    });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterField}\n            onChange={handleChangeFilterField}\n          >\n            {Object.keys(FilterField).map(option => (\n              <option\n                key={option}\n                value={FilterField[option as keyof typeof FilterField]}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDeleteQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUserById } from '../../api/user';\n\ntype Props = {\n  todo: Todo,\n  onToggleModal: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onToggleModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUserById(todo.userId)\n      .then(setUser)\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onToggleModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { User } from '../types/User';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/users/';\n\nexport function getUserById(userId: number): Promise<User> {\n  return fetch(`${API_URL + userId}.json`)\n    .then(responce => {\n      return responce.json();\n    });\n}\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getAllTodos } from './api/todos';\nimport { Todo } from './types/Todo';\nimport { Filter, FilterField } from './types/Filter';\n\nfunction getFilteredTodos(todos: Todo[], filter: Filter): Todo[] {\n  let newTodos = todos.filter(todo => {\n    switch (filter.filterField) {\n      case FilterField.Active:\n        return !todo.completed;\n      case FilterField.Completed:\n        return todo.completed;\n      case FilterField.All:\n      default:\n        return todo;\n    }\n  });\n\n  if (filter.query) {\n    newTodos = newTodos\n      .filter(({ title }) => title.toLowerCase()\n        .includes(filter.query.toLowerCase()));\n  }\n\n  return newTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>({ filterField: FilterField.All, query: '' });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const visibleTodos = getFilteredTodos(todos, filter);\n\n  const handleToggleModal = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleFilterChange = (currentFilter: Filter) => {\n    setFilter(currentFilter);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getAllTodos()\n      .then((currentTodos: Todo[]) => {\n        setTodos(currentTodos);\n      })\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilter={handleFilterChange}\n                filter={filter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  onToggleModal={handleToggleModal}\n                  selectedTodoId={selectedTodo?.id}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onToggleModal={handleToggleModal} />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json';\n\nexport function getAllTodos(): Promise<Todo[]> {\n  return fetch(API_URL)\n    .then(responce => {\n      return responce.json();\n    });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}