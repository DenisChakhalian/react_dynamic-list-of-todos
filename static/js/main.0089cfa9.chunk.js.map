{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api/user.ts","App.tsx","api/todos.ts","index.tsx"],"names":["FilterField","TodoList","todos","onToggleModal","choseTodoId","className","map","todo","id","completed","classnames","title","type","onClick","TodoFilter","onFilter","useState","query","setQuery","All","filterField","setFilterField","useEffect","value","onChange","event","target","Active","Completed","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","loader","setLoader","userId","fetch","then","responce","json","catch","error","console","log","finally","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","filter","setFilter","isLoading","setIsLoading","visibleTodos","newTodos","toLowerCase","includes","getFilteredTodos","handleToggleModal","currentTodos","currentFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0089cfa9.chunk.js","sourcesContent":["export enum FilterField {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport interface Filter {\n  filterField: FilterField;\n  query: string;\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onToggleModal: (todo:Todo | null) => void;\n  choseTodoId: number | undefined;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, onToggleModal,\n  choseTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                classnames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onToggleModal(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classnames('far', {\n                  'fa-eye': choseTodoId !== todo.id,\n                  'fa-eye-slash': choseTodoId === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Filter, FilterField } from '../../types/Filter';\n\ntype Props = {\n  onFilter: (filter: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ onFilter }) => {\n  const [query, setQuery] = useState('');\n  const [filterField, setFilterField] = useState<FilterField>(FilterField.All);\n\n  useEffect(() => {\n    onFilter({ filterField, query });\n  }, [query, filterField]);\n\n  const handleChangeFilterField\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterField(event.target.value as FilterField);\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDeleteQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterField}\n            onChange={handleChangeFilterField}\n          >\n            <option value={FilterField.All}>All</option>\n            <option value={FilterField.Active}>Active</option>\n            <option value={FilterField.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleDeleteQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUserById } from '../../api/user';\n\ntype Props = {\n  todo: Todo,\n  onToggleModal: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onToggleModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    getUserById(todo.userId)\n      .then(setUser)\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      })\n      .finally(() => setLoader(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loader ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onToggleModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { User } from '../types/User';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/users/';\n\nexport function getUserById(userId: number): Promise<User> {\n  return fetch(`${API_URL + userId}.json`)\n    .then(responce => {\n      return responce.json();\n    });\n}\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getAllTodos } from './api/todos';\nimport { Todo } from './types/Todo';\nimport { Filter, FilterField } from './types/Filter';\n\nfunction getFilteredTodos(todos: Todo[], filter: Filter): Todo[] {\n  let newTodos = todos.filter(todo => {\n    switch (filter.filterField) {\n      case FilterField.Active:\n        return !todo.completed;\n      case FilterField.Completed:\n        return todo.completed;\n      case FilterField.All:\n      default:\n        return todo;\n    }\n  });\n\n  if (filter.query) {\n    newTodos = newTodos\n      .filter(({ title }) => title.toLowerCase()\n        .includes(filter.query.toLowerCase()));\n  }\n\n  return newTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>({ filterField: FilterField.All, query: '' });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const visibleTodos = getFilteredTodos(todos, filter);\n\n  const handleToggleModal = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const handleFilterChange = (currentFilter: Filter) => {\n    setFilter(currentFilter);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getAllTodos()\n      .then((currentTodos: Todo[]) => {\n        setTodos(currentTodos);\n      })\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilter={handleFilterChange} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList todos={visibleTodos} onToggleModal={handleToggleModal} choseTodoId={selectedTodo?.id} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onToggleModal={handleToggleModal} />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json';\n\nexport function getAllTodos(): Promise<Todo[]> {\n  return fetch(API_URL)\n    .then(responce => {\n      return responce.json();\n    });\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}